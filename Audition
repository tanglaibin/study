一，多线程★：
1，状态
2，同步
3，安全
4，锁

实现方式
通过继承 Thread类实现一个线程 
通过实现 Runnable接口实现一个线程 
   继承扩展性不强， java总只支持单继承，如果一个类继承 Thread就不能继承其他的类了。
怎么启动？
   Thread thread = new Thread(继承了 Thread的对象 /实现了 Runnable的对象 )
   thread.setName(“设置一个线程名称 ”);
   thread.start();
   启动线程使用start方法，而启动了以后执行的是run方法。




2，java的跨平台原理 
由于各操作系统（ windows,liunx等）支持的指令集，不是完全一致的。就会让我们的程序在不同的操作系统上要执行不同程序代码。 
Java开发了适用于不同操作系统及位数的 java虚拟机来屏蔽个系统之间的差异，提供统一的接口。对于我们 java开发者而言，你只需要在不同的系统上安装对应的不同 java虚拟机、这时你的 java程序只要遵循 java规范，就可以在所有的操作系统上面运行 java程序了。

Java通过不同的系统、不同版本、不同位数的java虚拟机(jvm),来屏蔽不同的系统指令集差异而对外体统统一的接口(java API),对于我们普通的java开发者而言，
只需要按照接口开发即可。如果我系统需要部署到不同的环境时，只需在系统上面按照对应版本的虚拟机即可。


3，int占几个字节：
1B=一个字节=8位
Int占 4个字节 4B， 32位
Boolean 1位


4，面向对象的特征有哪些方面：有四大基本特征 :封装、抽象、继承、多态
面向对象的封装性，即将对象封装成一个高度自治和相对封闭的个体，对象状态（属性）由这个对象自己的行为（方法）来读取和改变。
张三这个人，他的姓名等属性，要有自己提供的获取或改变的方法来操作。 private name setName getName
抽象就是找出一些事物的相似和共性之处，然后将这些事物归为一个类，这个类只考虑这些事物的相似和共性之处，并且会忽略与当前主题和目标无关的那些方面，
将注意力集中在与当前目标有关的方面。 就是把现实生活中的对象，抽象为类。
在定义和实现一个类的时候，可以在一个已经存在的类的基础之上来进行，把这个已经存在的类所定义的内容作为自己的内容，并可以加入若干新的内容，
或修改原来的方法使之更适合特殊的需要，这就是继承。遗产继承
多态是指程序中定义的引用变量所指向的具体类型和通过该引用变量发出的方法调用在编程时并不确定，而是在程序运行期间才确定，
即一个引用变量倒底会指向哪个类的实例对象，该引用变量发出的方法调用到底是哪个类中实现的方法，必须在由程序运行期间才能决定。

5，集合
Java中的集合分为 value，key--vale(Conllection Map)两种。
存储值有分为 List 和Set.
List是有序的，可以重复的。
Set是无序的，不可以重复的。根据 equals和hashcode判断，也就是如果一个对象要存储在 Set中，必须重写 equals和hashCode方法。
存储key-value的为map.

6，ArrayList和LinkedList的区别 ? 
List常用的 ArrayList和LinkedList。区别和使用场景 ?
ArrayList底层使用时数组。 LinkedList使用的是链表。
数组查询具有所有查询特定元素比较快。而插入和删除和修改比较慢 (数组在内存中是一块连续的内存，如果插入或删除是需要移动内存 )。
链表不要求内存是连续的，在当前元素中存放下一个或上一个元素的地址。查询时需要从头部开始，一个一个的找。所以查询效率低 。插入时不需要移动内存，只需改变引用指向即可。所以插入或者删除的效率高。
 
ArrayList使用在查询比较多，但是插入和删除比较少的情况，而LinkedList使用在查询比较少而插入和删除比较多的情况。

7，HashMap哈HashTable的区别
区别：
HashMap是可以把 null作为key或者value的，而 HashTable是不可以的。 
HashMap是线程不安全的，效率较高。而 HashTalbe是线程安全的，效率较低。 
 
？我想线程安全但是我又想效率高？
通过把整个 Map分为N个Segment（类似 HashTable），可以提供相同的线程安全，但是效率提升 N倍，默认提升 16倍。

8，


HashMap的数据结构是什么？如何实现的。和HashTable，ConcurrentHashMap的区别
Cookie和Session的区别
索引有什么用？如何建索引？
ArrayList是如何实现的，ArrayList和LinkedList的区别？ArrayList如何实现扩容。
事务的实现原理
Spring的IOC容器实现原理，为什么可以通过byName和ByType找到Bean
Spring AOP实现原理

什么是设计模式？常用的设计模式有哪些？ 
设计模式：如模板模式，命令模式，策略模式，适配器模式、桥接模式、装饰模式，观察者模式，状态模式，访问者模式。

设计模式就是经过前人无数次的实践总结出的 ，设计过程中可以反复使用的、可以解决特定问题的设计方法 。

工厂模式 :Spring IOC就是使用了工厂模式，对象的创建交给一个工厂去创建。
代理模式 :Spring AOP就是使用的动态代理。


servlet的生命周期? 
加载Servlet的class---->实例化Servlet----->调用Servlet的init完成初始化
---->响应请求（Servlet的service方法）----->Servlet容器关闭时(Servlet的destory方法)

Servlet启动时，开始加载 servlet生命周期开始。 Servlet被服务器实例化后，容器运行其 init方法，请求到达时运行其 service方法， 
service方法自动派遣运行与请求对应的 doXXX方法（ doGet，doPost）等，当服务器决定将实例销毁的时候 (服务器关闭 )调用其 destroy方法。


Servlet API中forward() 与redirect()的区别？  
forward是服务器端的转向而 redirect是客户端的跳转。 
使用forward浏览器的地址不会发生改变。而 redirect会发生改变。 
Forward是一次请求中完成。而 redirect是重新发起请求。 
Forward是在服务器端完成，而不用客户端重新发起请求，效率较高。 


JSP和Servlet有哪些相同点和不同点? 
JSP是Servlet技术的扩展，所有的 jsp文件都会被翻译为一个继承 HttpServlet的类。也就是 jsp最终也是一个 Servlet.这个Servlet对外提供服务。
Servlet和JSP最主要的不同点在于JSP侧重于视图，Servlet主要用于控制逻辑。
 
Servlet如果要实现 html的功能，必须使用 Writer输出对应的 html,比较麻烦。而 JSP的情况是 Java和HTML可以组合成一个扩展名为 .jsp的文件 ,做界面展示比较方便而嵌入逻辑比较复杂。






















